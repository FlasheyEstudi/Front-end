import { Component, OnInit } from '@angular/core';
import { RouterModule } from '@angular/router';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { CarreraService } from '../../services/carrera.service'; // Adjust path as needed

@Component({
  selector: 'app-carrera', // Selector for the component
  standalone: true,
  imports: [RouterModule, CommonModule, FormsModule],
  templateUrl: './carrera.component.html', // HTML template file
  styleUrl: './carrera.component.css' // CSS style file
})
export class CarreraComponent implements OnInit {

  carreras: any[] = []; // Array to hold careers
  nuevaCarrera = { // Object for a new career
    Nombre: '', // Corresponds to 'Nombre' column
    AreaConocimientoId: null // Corresponds to 'AreaConocimientoId' (FK)
  };
  errorMsg: string = ''; // Message for displaying errors

  constructor(private carreraService: CarreraService) {
    // Constructor, load data in ngOnInit
  }

  ngOnInit(): void {
    this.loadCarreras(); // Load data when the component initializes
  }

  /**
   * Loads all careers from the service.
   */
  async loadCarreras() {
    this.errorMsg = ''; // Clear any previous error messages
    try {
      this.carreras = await this.carreraService.getAllCarreras();
      // console.log('Datos Carreras', JSON.stringify(this.carreras)); // Uncomment for debugging
    } catch (error: any) {
      this.errorMsg = error.message || 'Error desconocido al cargar carreras.';
      console.error('❌ ERROR AL CARGAR CARRERAS:', error);
    }
  }

  /**
   * Refreshes the list of careers.
   */
  async recargarCarreras() {
    this.errorMsg = ''; // Clear any previous error messages
    try {
      this.carreras = await this.carreraService.getAllCarreras();
    } catch (error: any) {
      this.errorMsg = error.message || 'Error al recargar carreras.';
      console.error('❌ ERROR AL RECARGAR CARRERAS:', error);
    }
  }

  /**
   * Saves a new career using the service.
   */
  async guardarCarrera() {
    console.log('INTENTANDO GUARDAR - Original:', this.nuevaCarrera);

    try {
      // Prepare data to send to the backend, aligning with the Beca.Carrera table
      const dataEnviar = {
        Id: 0, // Id is typically auto-generated by the backend
        Nombre: this.nuevaCarrera.Nombre,
        AreaConocimientoId: Number(this.nuevaCarrera.AreaConocimientoId), // Convert to number
      };

      console.log('DATOS A ENVIAR AL BACKEND:', dataEnviar);

      const guardado = await this.carreraService.createCarrera(dataEnviar);

      console.log('RESPUESTA DEL BACKEND:', guardado);

      this.limpiarFormulario(); // Clear the form after successful save
      this.recargarCarreras(); // Reload the list to show the new career
    } catch (error: any) {
      this.errorMsg = error.message || 'Error al guardar carrera.';
      console.error('❌ ERROR AL GUARDAR CARRERA:', error);
    }
  }

  /**
   * Clears the list of careers displayed.
   */
  limpiarCarreras() {
    this.carreras = []; // Empty the array
    this.errorMsg = ''; // Clear error message
  }

  /**
   * Resets the form fields for a new career.
   */
  limpiarFormulario() {
    this.nuevaCarrera = { // Reset object
      Nombre: '',
      AreaConocimientoId: null
    };
    this.errorMsg = ''; // Clear error message
  }
}